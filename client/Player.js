"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

class Player {
  constructor(playerState) {
    this.state = playerState;
  } // we should have a parent class or a mixin to avoid repeting that...


  getValues() {
    return this.state.getValues();
  }

  get(name) {
    return this.state.get(name);
  }

  async set(values) {
    return await this.state.set(values);
  }

  subscribe(func) {
    return this.state.subscribe(func);
  }

  async detach() {
    await this.state.detach();
  }

  onDetach(func) {
    // @note - just a decorator for log
    const callback = () => {
      console.log('@todo - clean session audio buffers');
      func();
    };

    this.state.onDetach(callback);
  }

  onDelete(func) {
    this.state.onDelete(func);
  } // "real" specific player code


  setGraphOptions(moduleId, updates) {
    this.state.set({
      graphOptionsEvent: {
        [moduleId]: updates
      }
    });
  }

  getGraphOptions(moduleId) {
    graphOptions = this.state.get('graphOptions');
    return graphOptions[moduleId];
  }

}

var _default = Player;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvUGxheWVyLmpzIl0sIm5hbWVzIjpbIlBsYXllciIsImNvbnN0cnVjdG9yIiwicGxheWVyU3RhdGUiLCJzdGF0ZSIsImdldFZhbHVlcyIsImdldCIsIm5hbWUiLCJzZXQiLCJ2YWx1ZXMiLCJzdWJzY3JpYmUiLCJmdW5jIiwiZGV0YWNoIiwib25EZXRhY2giLCJjYWxsYmFjayIsImNvbnNvbGUiLCJsb2ciLCJvbkRlbGV0ZSIsInNldEdyYXBoT3B0aW9ucyIsIm1vZHVsZUlkIiwidXBkYXRlcyIsImdyYXBoT3B0aW9uc0V2ZW50IiwiZ2V0R3JhcGhPcHRpb25zIiwiZ3JhcGhPcHRpb25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsTUFBTUEsTUFBTixDQUFhO0FBQ1hDLEVBQUFBLFdBQVcsQ0FBQ0MsV0FBRCxFQUFjO0FBQ3ZCLFNBQUtDLEtBQUwsR0FBYUQsV0FBYjtBQUNELEdBSFUsQ0FLWDs7O0FBQ0FFLEVBQUFBLFNBQVMsR0FBRztBQUNWLFdBQU8sS0FBS0QsS0FBTCxDQUFXQyxTQUFYLEVBQVA7QUFDRDs7QUFFREMsRUFBQUEsR0FBRyxDQUFDQyxJQUFELEVBQU87QUFDUixXQUFPLEtBQUtILEtBQUwsQ0FBV0UsR0FBWCxDQUFlQyxJQUFmLENBQVA7QUFDRDs7QUFFUSxRQUFIQyxHQUFHLENBQUNDLE1BQUQsRUFBUztBQUNoQixXQUFPLE1BQU0sS0FBS0wsS0FBTCxDQUFXSSxHQUFYLENBQWVDLE1BQWYsQ0FBYjtBQUNEOztBQUVEQyxFQUFBQSxTQUFTLENBQUNDLElBQUQsRUFBTztBQUNkLFdBQU8sS0FBS1AsS0FBTCxDQUFXTSxTQUFYLENBQXFCQyxJQUFyQixDQUFQO0FBQ0Q7O0FBRVcsUUFBTkMsTUFBTSxHQUFHO0FBQ2IsVUFBTSxLQUFLUixLQUFMLENBQVdRLE1BQVgsRUFBTjtBQUNEOztBQUVEQyxFQUFBQSxRQUFRLENBQUNGLElBQUQsRUFBTztBQUNiO0FBQ0EsVUFBTUcsUUFBUSxHQUFHLE1BQU07QUFDckJDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFDQUFaO0FBQ0FMLE1BQUFBLElBQUk7QUFDTCxLQUhEOztBQUtBLFNBQUtQLEtBQUwsQ0FBV1MsUUFBWCxDQUFvQkMsUUFBcEI7QUFDRDs7QUFFREcsRUFBQUEsUUFBUSxDQUFDTixJQUFELEVBQU87QUFDYixTQUFLUCxLQUFMLENBQVdhLFFBQVgsQ0FBb0JOLElBQXBCO0FBQ0QsR0F0Q1UsQ0F3Q1g7OztBQUNBTyxFQUFBQSxlQUFlLENBQUNDLFFBQUQsRUFBV0MsT0FBWCxFQUFvQjtBQUNqQyxTQUFLaEIsS0FBTCxDQUFXSSxHQUFYLENBQWU7QUFBRWEsTUFBQUEsaUJBQWlCLEVBQUU7QUFBRSxTQUFDRixRQUFELEdBQVlDO0FBQWQ7QUFBckIsS0FBZjtBQUNEOztBQUVERSxFQUFBQSxlQUFlLENBQUNILFFBQUQsRUFBVztBQUN4QkksSUFBQUEsWUFBWSxHQUFHLEtBQUtuQixLQUFMLENBQVdFLEdBQVgsQ0FBZSxjQUFmLENBQWY7QUFDQSxXQUFPaUIsWUFBWSxDQUFDSixRQUFELENBQW5CO0FBQ0Q7O0FBaERVOztlQW1ERWxCLE0iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNsYXNzIFBsYXllciB7XG4gIGNvbnN0cnVjdG9yKHBsYXllclN0YXRlKSB7XG4gICAgdGhpcy5zdGF0ZSA9IHBsYXllclN0YXRlO1xuICB9XG5cbiAgLy8gd2Ugc2hvdWxkIGhhdmUgYSBwYXJlbnQgY2xhc3Mgb3IgYSBtaXhpbiB0byBhdm9pZCByZXBldGluZyB0aGF0Li4uXG4gIGdldFZhbHVlcygpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXRWYWx1ZXMoKTtcbiAgfVxuXG4gIGdldChuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0KG5hbWUpO1xuICB9XG5cbiAgYXN5bmMgc2V0KHZhbHVlcykge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnN0YXRlLnNldCh2YWx1ZXMpO1xuICB9XG5cbiAgc3Vic2NyaWJlKGZ1bmMpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5zdWJzY3JpYmUoZnVuYyk7XG4gIH1cblxuICBhc3luYyBkZXRhY2goKSB7XG4gICAgYXdhaXQgdGhpcy5zdGF0ZS5kZXRhY2goKTtcbiAgfVxuXG4gIG9uRGV0YWNoKGZ1bmMpIHtcbiAgICAvLyBAbm90ZSAtIGp1c3QgYSBkZWNvcmF0b3IgZm9yIGxvZ1xuICAgIGNvbnN0IGNhbGxiYWNrID0gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ0B0b2RvIC0gY2xlYW4gc2Vzc2lvbiBhdWRpbyBidWZmZXJzJyk7XG4gICAgICBmdW5jKCk7XG4gICAgfVxuXG4gICAgdGhpcy5zdGF0ZS5vbkRldGFjaChjYWxsYmFjayk7XG4gIH1cblxuICBvbkRlbGV0ZShmdW5jKSB7XG4gICAgdGhpcy5zdGF0ZS5vbkRlbGV0ZShmdW5jKTtcbiAgfVxuXG4gIC8vIFwicmVhbFwiIHNwZWNpZmljIHBsYXllciBjb2RlXG4gIHNldEdyYXBoT3B0aW9ucyhtb2R1bGVJZCwgdXBkYXRlcykge1xuICAgIHRoaXMuc3RhdGUuc2V0KHsgZ3JhcGhPcHRpb25zRXZlbnQ6IHsgW21vZHVsZUlkXTogdXBkYXRlcyB9fSk7XG4gIH1cblxuICBnZXRHcmFwaE9wdGlvbnMobW9kdWxlSWQpIHtcbiAgICBncmFwaE9wdGlvbnMgPSB0aGlzLnN0YXRlLmdldCgnZ3JhcGhPcHRpb25zJyk7XG4gICAgcmV0dXJuIGdyYXBoT3B0aW9uc1ttb2R1bGVJZF07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGxheWVyO1xuIl19