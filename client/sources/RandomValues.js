"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _BaseSource = _interopRequireDefault(require("../../common/sources/BaseSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo - create a SineSource (probably more usefull for testing)
class RandomValues extends _BaseSource.default {
  constructor(como, streamId = 0, {
    period = 0.05
  } = {}) {
    super();
    this.como = como;
    this.streamId = streamId;
    this.period = period;
    this.data = {
      metas: {},
      accelerationIncludingGravity: {},
      rotationRate: {}
    };
    this.intervalId = null;
  }

  addListener(callback) {
    super.addListener(callback);

    if (this.listeners.size === 1) {
      this.intervalId = setInterval(() => this.process(), this.period * 1000);
    }
  }

  removeListener(callback) {
    super.removeListener(callback);

    if (this.listeners.size === 0) {
      clearInterval(this.intervalId);
    }
  }

  process() {
    // @note - using audio time as a synced clock source is not very accurate
    // on Android phones
    const syncTime = this.como.experience.plugins['sync'].getSyncTime(); // metas

    this.data.metas.id = this.streamId;
    this.data.metas.time = syncTime;
    this.data.metas.period = this.period; // acceleration

    this.data.accelerationIncludingGravity.x = Math.random();
    this.data.accelerationIncludingGravity.y = Math.random();
    this.data.accelerationIncludingGravity.z = Math.random(); // rotation

    this.data.rotationRate.alpha = Math.random();
    this.data.rotationRate.beta = Math.random();
    this.data.rotationRate.gamma = Math.random();
    this.emit(this.data);
  }

}

var _default = RandomValues;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGllbnQvc291cmNlcy9SYW5kb21WYWx1ZXMuanMiXSwibmFtZXMiOlsiUmFuZG9tVmFsdWVzIiwiQmFzZVNvdXJjZSIsImNvbnN0cnVjdG9yIiwiY29tbyIsInN0cmVhbUlkIiwicGVyaW9kIiwiZGF0YSIsIm1ldGFzIiwiYWNjZWxlcmF0aW9uSW5jbHVkaW5nR3Jhdml0eSIsInJvdGF0aW9uUmF0ZSIsImludGVydmFsSWQiLCJhZGRMaXN0ZW5lciIsImNhbGxiYWNrIiwibGlzdGVuZXJzIiwic2l6ZSIsInNldEludGVydmFsIiwicHJvY2VzcyIsInJlbW92ZUxpc3RlbmVyIiwiY2xlYXJJbnRlcnZhbCIsInN5bmNUaW1lIiwiZXhwZXJpZW5jZSIsInBsdWdpbnMiLCJnZXRTeW5jVGltZSIsImlkIiwidGltZSIsIngiLCJNYXRoIiwicmFuZG9tIiwieSIsInoiLCJhbHBoYSIsImJldGEiLCJnYW1tYSIsImVtaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBO0FBQ0EsTUFBTUEsWUFBTixTQUEyQkMsbUJBQTNCLENBQXNDO0FBQ3BDQyxFQUFBQSxXQUFXLENBQUNDLElBQUQsRUFBT0MsUUFBUSxHQUFHLENBQWxCLEVBQXFCO0FBQUVDLElBQUFBLE1BQU0sR0FBRztBQUFYLE1BQW9CLEVBQXpDLEVBQTZDO0FBQ3REO0FBRUEsU0FBS0YsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQkEsUUFBaEI7QUFDQSxTQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFFQSxTQUFLQyxJQUFMLEdBQVk7QUFDVkMsTUFBQUEsS0FBSyxFQUFFLEVBREc7QUFFVkMsTUFBQUEsNEJBQTRCLEVBQUUsRUFGcEI7QUFHVkMsTUFBQUEsWUFBWSxFQUFFO0FBSEosS0FBWjtBQU1BLFNBQUtDLFVBQUwsR0FBa0IsSUFBbEI7QUFDRDs7QUFFREMsRUFBQUEsV0FBVyxDQUFDQyxRQUFELEVBQVc7QUFDcEIsVUFBTUQsV0FBTixDQUFrQkMsUUFBbEI7O0FBRUEsUUFBSSxLQUFLQyxTQUFMLENBQWVDLElBQWYsS0FBd0IsQ0FBNUIsRUFBK0I7QUFDN0IsV0FBS0osVUFBTCxHQUFrQkssV0FBVyxDQUFDLE1BQU0sS0FBS0MsT0FBTCxFQUFQLEVBQXVCLEtBQUtYLE1BQUwsR0FBYyxJQUFyQyxDQUE3QjtBQUNEO0FBQ0Y7O0FBRURZLEVBQUFBLGNBQWMsQ0FBQ0wsUUFBRCxFQUFXO0FBQ3ZCLFVBQU1LLGNBQU4sQ0FBcUJMLFFBQXJCOztBQUVBLFFBQUksS0FBS0MsU0FBTCxDQUFlQyxJQUFmLEtBQXdCLENBQTVCLEVBQStCO0FBQzdCSSxNQUFBQSxhQUFhLENBQUMsS0FBS1IsVUFBTixDQUFiO0FBQ0Q7QUFDRjs7QUFFRE0sRUFBQUEsT0FBTyxHQUFHO0FBQ1I7QUFDQTtBQUNBLFVBQU1HLFFBQVEsR0FBRyxLQUFLaEIsSUFBTCxDQUFVaUIsVUFBVixDQUFxQkMsT0FBckIsQ0FBNkIsTUFBN0IsRUFBcUNDLFdBQXJDLEVBQWpCLENBSFEsQ0FJUjs7QUFDQSxTQUFLaEIsSUFBTCxDQUFVQyxLQUFWLENBQWdCZ0IsRUFBaEIsR0FBcUIsS0FBS25CLFFBQTFCO0FBQ0EsU0FBS0UsSUFBTCxDQUFVQyxLQUFWLENBQWdCaUIsSUFBaEIsR0FBdUJMLFFBQXZCO0FBQ0EsU0FBS2IsSUFBTCxDQUFVQyxLQUFWLENBQWdCRixNQUFoQixHQUF5QixLQUFLQSxNQUE5QixDQVBRLENBUVI7O0FBQ0EsU0FBS0MsSUFBTCxDQUFVRSw0QkFBVixDQUF1Q2lCLENBQXZDLEdBQTJDQyxJQUFJLENBQUNDLE1BQUwsRUFBM0M7QUFDQSxTQUFLckIsSUFBTCxDQUFVRSw0QkFBVixDQUF1Q29CLENBQXZDLEdBQTJDRixJQUFJLENBQUNDLE1BQUwsRUFBM0M7QUFDQSxTQUFLckIsSUFBTCxDQUFVRSw0QkFBVixDQUF1Q3FCLENBQXZDLEdBQTJDSCxJQUFJLENBQUNDLE1BQUwsRUFBM0MsQ0FYUSxDQVlSOztBQUNBLFNBQUtyQixJQUFMLENBQVVHLFlBQVYsQ0FBdUJxQixLQUF2QixHQUErQkosSUFBSSxDQUFDQyxNQUFMLEVBQS9CO0FBQ0EsU0FBS3JCLElBQUwsQ0FBVUcsWUFBVixDQUF1QnNCLElBQXZCLEdBQThCTCxJQUFJLENBQUNDLE1BQUwsRUFBOUI7QUFDQSxTQUFLckIsSUFBTCxDQUFVRyxZQUFWLENBQXVCdUIsS0FBdkIsR0FBK0JOLElBQUksQ0FBQ0MsTUFBTCxFQUEvQjtBQUVBLFNBQUtNLElBQUwsQ0FBVSxLQUFLM0IsSUFBZjtBQUNEOztBQW5EbUM7O2VBc0R2Qk4sWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlU291cmNlIGZyb20gJy4uLy4uL2NvbW1vbi9zb3VyY2VzL0Jhc2VTb3VyY2UnO1xuXG4vLyBAdG9kbyAtIGNyZWF0ZSBhIFNpbmVTb3VyY2UgKHByb2JhYmx5IG1vcmUgdXNlZnVsbCBmb3IgdGVzdGluZylcbmNsYXNzIFJhbmRvbVZhbHVlcyBleHRlbmRzIEJhc2VTb3VyY2Uge1xuICBjb25zdHJ1Y3Rvcihjb21vLCBzdHJlYW1JZCA9IDAsIHsgcGVyaW9kID0gMC4wNSB9ID0ge30pIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5jb21vID0gY29tbztcbiAgICB0aGlzLnN0cmVhbUlkID0gc3RyZWFtSWQ7XG4gICAgdGhpcy5wZXJpb2QgPSBwZXJpb2Q7XG5cbiAgICB0aGlzLmRhdGEgPSB7XG4gICAgICBtZXRhczoge30sXG4gICAgICBhY2NlbGVyYXRpb25JbmNsdWRpbmdHcmF2aXR5OiB7fSxcbiAgICAgIHJvdGF0aW9uUmF0ZToge30sXG4gICAgfTtcblxuICAgIHRoaXMuaW50ZXJ2YWxJZCA9IG51bGw7XG4gIH1cblxuICBhZGRMaXN0ZW5lcihjYWxsYmFjaykge1xuICAgIHN1cGVyLmFkZExpc3RlbmVyKGNhbGxiYWNrKTtcblxuICAgIGlmICh0aGlzLmxpc3RlbmVycy5zaXplID09PSAxKSB7XG4gICAgICB0aGlzLmludGVydmFsSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLnByb2Nlc3MoKSwgdGhpcy5wZXJpb2QgKiAxMDAwKTtcbiAgICB9XG4gIH1cblxuICByZW1vdmVMaXN0ZW5lcihjYWxsYmFjaykge1xuICAgIHN1cGVyLnJlbW92ZUxpc3RlbmVyKGNhbGxiYWNrKTtcblxuICAgIGlmICh0aGlzLmxpc3RlbmVycy5zaXplID09PSAwKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxJZCk7XG4gICAgfVxuICB9XG5cbiAgcHJvY2VzcygpIHtcbiAgICAvLyBAbm90ZSAtIHVzaW5nIGF1ZGlvIHRpbWUgYXMgYSBzeW5jZWQgY2xvY2sgc291cmNlIGlzIG5vdCB2ZXJ5IGFjY3VyYXRlXG4gICAgLy8gb24gQW5kcm9pZCBwaG9uZXNcbiAgICBjb25zdCBzeW5jVGltZSA9IHRoaXMuY29tby5leHBlcmllbmNlLnBsdWdpbnNbJ3N5bmMnXS5nZXRTeW5jVGltZSgpO1xuICAgIC8vIG1ldGFzXG4gICAgdGhpcy5kYXRhLm1ldGFzLmlkID0gdGhpcy5zdHJlYW1JZDtcbiAgICB0aGlzLmRhdGEubWV0YXMudGltZSA9IHN5bmNUaW1lO1xuICAgIHRoaXMuZGF0YS5tZXRhcy5wZXJpb2QgPSB0aGlzLnBlcmlvZDtcbiAgICAvLyBhY2NlbGVyYXRpb25cbiAgICB0aGlzLmRhdGEuYWNjZWxlcmF0aW9uSW5jbHVkaW5nR3Jhdml0eS54ID0gTWF0aC5yYW5kb20oKTtcbiAgICB0aGlzLmRhdGEuYWNjZWxlcmF0aW9uSW5jbHVkaW5nR3Jhdml0eS55ID0gTWF0aC5yYW5kb20oKTtcbiAgICB0aGlzLmRhdGEuYWNjZWxlcmF0aW9uSW5jbHVkaW5nR3Jhdml0eS56ID0gTWF0aC5yYW5kb20oKTtcbiAgICAvLyByb3RhdGlvblxuICAgIHRoaXMuZGF0YS5yb3RhdGlvblJhdGUuYWxwaGEgPSBNYXRoLnJhbmRvbSgpO1xuICAgIHRoaXMuZGF0YS5yb3RhdGlvblJhdGUuYmV0YSA9IE1hdGgucmFuZG9tKCk7XG4gICAgdGhpcy5kYXRhLnJvdGF0aW9uUmF0ZS5nYW1tYSA9IE1hdGgucmFuZG9tKCk7XG5cbiAgICB0aGlzLmVtaXQodGhpcy5kYXRhKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSYW5kb21WYWx1ZXM7XG4iXX0=